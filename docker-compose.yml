version: '3.8'

services:
  # База данных
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Django + Gunicorn + миграции + статика
  backend:
    build:
      context: .
      args:
        SECRET_KEY: ${SECRET_KEY}
        DEBUG: ${DEBUG}
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        CELERY_BROKER_URL: ${CELERY_BROKER_URL}
        CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
        TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
        env_file: .env
    command: >
      sh -c "
      python manage.py migrate --noinput &&
      gunicorn config.wsgi:application --bind ${DJANGO_HOST}:${DJANGO_PORT}
      "
    env_file: .env
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "${DJANGO_PORT}"
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Worker
  celery:
    build: .
    command: celery -A config worker -l info
    env_file: .env
    volumes:
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Nginx как reverse-proxy
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
    restart: unless-stopped

# Тома
volumes:
  postgres_data:
  static_volume:
  media_volume: